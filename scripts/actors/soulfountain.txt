/*
 * Copyright (c) 2020 Kevin Caccamo
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
**/

/*
Soul Fountain - gives souls and health to any players standing near it

For final battle with Hitler on C3M6_B
*/
class SoulFountain : Actor
{
	int count;
	int soulmax;
	int healthmax;

	Property MaxSouls: soulmax;
	Property MaxHealth: healthmax;

	Default
	{
		Height 32;
		Radius 64;
		RenderStyle "Add";
		SoulFountain.MaxSouls 150;
		SoulFountain.MaxHealth 200;
		-SOLID
		-SHOOTABLE
		+NOBLOCKMAP
		+FLOORHUGGER
		+FLATSPRITE
	}

	States
	{
	Spawn:
		SWRL ABCDEFGHIJKLMNOPQRSTUVWXYZ 2 A_SpawnVFX;
	}

	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		count = 0;
	}

	void A_SpawnVFX()
	{
		Vector3 SpawnPointOffset = (random[creepyvfx](-64, 64), random[creepyvfx](-64, 64), 0);
		Vector3 SpawnPoint = Pos + SpawnPointOffset;
		Spawn("DamnedSoul", SpawnPoint, NO_REPLACE);
		count += 1;
		if (count == 1)
		{
			A_Fountain();
			count = 0;
		}
	}

	void A_Fountain()
	{
		BlockThingsIterator it = BlockThingsIterator.Create(self, Radius * .75);
		while (it.Next())
		{
			Actor thing = it.thing;
			if (thing.player)
			{
				A_GiveShit(thing, 1);
			}
		}
	}

	void A_GiveShit(Actor to, int amount)
	{
		Inventory souls = to.FindInventory("Soul");
		if (souls && souls.amount < soulmax)
		{
			to.A_GiveInventory("Soul", amount);
		}
		if (to.health < healthmax)
		{
			to.GiveBody(amount);
		}
	}
}