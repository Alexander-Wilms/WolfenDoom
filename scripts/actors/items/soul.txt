/*
 * Copyright (c) 2018-2020 AFADoomer
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
**/

class Soul : StackableInventory
{
	Default
	{
		//$Category Powerups (BoA)
		//$Title Souls (+1)
		//$Color 6
		//$Sprite AMM3A0
		+FLOATBOB
		+FORCEXYBILLBOARD
		+INVENTORY.INVBAR
		+LOOKALLAROUND
		+NOCLIP
		Inventory.Amount 1;
		Inventory.MaxAmount 9999;
		Inventory.Icon "AMM3I0";
		Inventory.PickupMessage "$SOUL_SM";
		Inventory.PickupSound "DSSLPU";
		Speed 7;
	}

	States
	{
		Placed:
			AMM3 ABCD 5 Bright Light("Soul") A_SoulSeek;
			Loop;
		Spawn:
			AMM3 ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCD 5 Bright Light("Soul") A_SoulSeek;
		Fadeout:
			AMM3 ABCD 5 Bright A_FadeOut(0.05);
			Loop;
	}

	override void PostBeginPlay()
	{
		Super.PostBeginPlay();

		if (GetClassName() == "Soul" && !bDropped) { SetStateLabel("Placed"); }
	}

	Actor FindClosestPlayer(Actor existing = null, int distance = 256)
	{
		Actor targetPlayer = null;
		for (int player = 0; player < MAXPLAYERS; player++)
		{
			if (!playeringame[player]){ continue; }
			double pdist = Distance2D(players[player].mo);
			if (pdist > distance || (target && target.player && pdist > Distance2D(target))) {
				continue;
			}
			targetPlayer = players[player].mo;
		}
		return targetPlayer;
	}

	void A_SoulSeek()
	{
		target = FindClosestPlayer(target);
		if (target) {
			Vel.XY = Vec2To(target).Unit() * Speed;
		}
	}
}

class SoulBig : Soul
{
	Default
	{
		//$Category Powerups (BoA)
		//$Title Souls (+3)
		//$Color 6
		//$Sprite AMM3E0

		Inventory.Amount 3;
		Inventory.PickupMessage "$SOUL_BG";
	}

	States
	{
		Spawn:
			AMM3 EFGH 4 Bright Light("SoulBig");
			Loop;
	}
}

class SoulSuperBig : Soul
{
	Default
	{
		//$Category Powerups (BoA)
		//$Title Souls (+25)
		//$Color 6
		//$Sprite AMM3E0

		Inventory.Amount 25;
		Inventory.PickupMessage "$SOUL_XBG";
	}

	States
	{
		Spawn:
			AMM3 EFGH 4 Bright Light("SoulBig");
			Loop;
	}
}
