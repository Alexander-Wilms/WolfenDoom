/*
 * Copyright (c) 2020 AFADoomer
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
**/

class REBase : Actor
{
	Default
	{
		//$Category Resident Evil (BoA)
		+SOLID
		+CANPASS
	}
}

class REChandelier : SwitchableDecoration
{
	Default
	{
		//$Category Resident Evil (BoA)
		//$Title Entry Hall Chandelier
		+NOGRAVITY
		-SOLID
	}

	States
	{
		Spawn:
		Inactive:
			MDLA A -1;
			Stop;
		Active:
			MDLA A -1 BRIGHT;
			Stop;
	}
}

class RETableSmall : REBase
{
	Default
	{
		//$Title Small Table
		Height 38;
		Radius 20;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class RETableSide : REBase
{
	Default
	{
		//$Title Side Table (Half circle)
		Height 48;
		Radius 20;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REVase : REBase
{
	Default
	{
		//$Title Vase
		Height 26;
		Radius 20;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class RELightStair : REBase
{
	Default
	{
		//$Title Tall Lamp
		Height 128;
		Radius 10;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class RELightStair2 : REBase
{
	Default
	{
		//$Title Short Lamp
		Height 64;
		Radius 10;
		+NOGRAVITY
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REColumn1 : REBase
{
	Default
	{
		//$Title Suport Column (Entry hall sides)
		+NOGRAVITY
		Height 140;
		Radius 10;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REChair : REBase
{
	Default
	{
		//$Title Chair
		Height 21;
		Radius 32;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REBalusterLarge : REBase
{
	Default
	{
		//$Title Rail Support (End, Upper level)
		+NOGRAVITY
		+NOINTERACTION
		Height 32;
		Radius 6;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REBalusterLarge2 : REBase
{
	Default
	{
		//$Title Rail Support (End, Upper level (Back))
		+NOGRAVITY
		+NOINTERACTION
		Height 32;
		Radius 6;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REBalusterMedium : REBase
{
	Default
	{
		//$Title Rail Support (End)
		+NOGRAVITY
		+NOINTERACTION
		Height 32;
		Radius 6;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REBalusterSmall : REBase
{
	Default
	{
		//$Title Rail Support
		+NOGRAVITY
		Height 21;
		Radius 4;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class RECarpetWeight : REBase
{
	Default
	{
		//$Title Carpet Runner Weight
		-SOLID
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REColumn2 : REBase
{
	Default
	{
		//$Title Support Column (Entry Hall, Large)
		+NOGRAVITY
		Height 212;
		Radius 16;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REArches : REBase
{
	Default
	{
		//$Title Entry Hall Arches
		+NOGRAVITY
		+NOINTERACTION
		+NOBLOCKMAP
		-SOLID
		RenderRadius 1024.0;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REColumn3 : REBase
{
	Default
	{
		//$Title Support Column (Upper Level, 128 tall)
		+NOGRAVITY
		Height 170;
		Radius 12;
		RenderRadius 32;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REColumn6 : REBase
{
	Default
	{
		//$Title Support Column (Upper Level, 112 tall)
		+NOGRAVITY
		Height 150;
		Radius 12;
		RenderRadius 32;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REColumn4 : REBase
{
	Default
	{
		//$Title Support Column (Stair Landing)
		+NOGRAVITY
		Height 214;
		Radius 16;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REColumn5 : REBase
{
	Default
	{
		//$Title Support Column (Stair Entry)
		+NOGRAVITY
		Height 170;
		Radius 16;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}


class RECeiling : REBase
{
	Default
	{
		//$Title Entry Hall Ceiling
		+NOGRAVITY
		+NOINTERACTION
		+NOBLOCKMAP
		-SOLID
		RenderRadius 1024.0;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REWindows : REBase
{
	Default
	{
		//$Title Main Windows
		Height 170;
		Radius 1;
		+NOGRAVITY
		RenderRadius 1024.0;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REBasementEntry : REBase
{
	Default
	{
		//$Title Basement Entry (Right)
		Height 0;
		Radius 0;
		+NOGRAVITY
		-SOLID
		+NOINTERACTION
		RenderRadius 1024.0;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REBasementEntry2 : REBase
{
	Default
	{
		//$Title Basement Entry (Left)
		Height 0;
		Radius 0;
		+NOGRAVITY
		-SOLID
		+NOINTERACTION
		RenderRadius 1024.0;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REBasementVault : REBase
{
	Default
	{
		//$Title Basement Vault (Right)
		Height 0;
		Radius 0;
		+NOGRAVITY
		-SOLID
		+NOINTERACTION
		RenderRadius 256.0;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}

class REBasementVault2 : REBase
{
	Default
	{
		//$Title Basement Vault (Left)
		Height 0;
		Radius 0;
		+NOGRAVITY
		-SOLID
		+NOINTERACTION
		RenderRadius 256.0;
	}

	States
	{
		Spawn:
			MDLA A -1;
			Stop;
	}
}


/*
Class RENemesis : ZombieStandard
{
	Default
	{
		//$Category Resident Evil (BoA)
		//$Title Nemesis Boss
		Tag "$TAGNEMESIS";
		Obituary "$ZNEMS";
		Health 2000;
		WoundHealth 500;
		Painchance 8;
		Mass 800;
		Speed 3;
		+AVOIDMELEE
		+BOSS
		+LOOKALLAROUND
	}
	
	States
	{
	Spawn:
		NEMS A 0;
		Goto Look;
	Heal:
		"####" F 0 A_StartSound("misc/health_pkup");
		"####" F 0 A_GiveInventory("PrisonerMedikitCounter", 1);
		"####" F 0 A_GiveInventory("Health", 500);
		"####" FFFFFFFFFF 2 A_SpawnItemEx("HealingParticle", random(10,-10), random(10,-10), random(16,64), 0, 0, random(1, 2), 0);
	See:
		"####" "#" 0 A_SetUserVar("user_incombat", TRUE);
	SeeLoop:
		"####" E 1 A_Chase("","",CHF_FASTCHASE);
		"####" EEE 1 A_Chase("","");
		"####" E 1 A_Chase;
		"####" EEE 1 A_Chase("","");
		"####" B 1 A_Chase;
		"####" B 0 A_SpawnItemEx("EnemyStep",0,0,14,0,0,0,0,SXF_NOCHECKPOSITION);
		"####" BBB 1 A_Chase("","");
		"####" B 1 A_Chase;
		"####" BBB 1 A_Chase("","");
		"####" C 1 A_Chase("","",CHF_FASTCHASE);
		"####" CCC 1 A_Chase("","");
		"####" C 1 A_Chase;
		"####" CCC 1 A_Chase("","");
		"####" D 1 A_Chase;
		"####" D 0 A_SpawnItemEx("EnemyStep",0,0,14,0,0,0,0,SXF_NOCHECKPOSITION);
		"####" DDD 1 A_Chase("","");
		"####" D 1 A_Chase;
		"####" DDD 1 A_Chase("","");
		Loop;
	Missile:
		"####" A 0 A_JumpIfInventory("PrisonerMedikitCounter", 3, 2);
		"####" A 0 A_JumpIfHealthLower(600, "Heal");
		"####" A 0 A_Jump(192, "Luger");
	Grenade:
		"####" F 0 A_Jump(128, "OccultFire");
		"####" F 0 A_Jump(128, "ZyklonFire");
		"####" F 16 A_FaceTarget;
		"####" F 10 A_SpawnProjectile("HandGrenade",40,4,random(-8,8), CMF_OFFSETPITCH|CMF_BADPITCH, random(0,16));
		Goto See;
	Luger:
		"####" FG 5 A_FaceTarget;
		"####" H 0 A_StartSound("nazi/mp40", CHAN_WEAPON);
		"####" H 2 LIGHT(NAZIFIRE) A_SpawnProjectile("EnemySMGTracer",50,4,random(-8,8));
		"####" H 0 A_SpawnItemEx("9MMCasing", 8,0,40, random(3,4), random(-1,1), random(2,4), random(-55,-80),SXF_NOCHECKPOSITION);
		"####" G 2 A_FaceTarget;
		"####" H 0 A_StartSound("nazi/mp40", CHAN_WEAPON);
		"####" H 2 LIGHT(NAZIFIRE) A_SpawnProjectile("EnemySMGTracer",50,4,random(-8,8));
		"####" H 0 A_SpawnItemEx("9MMCasing", 8,0,40, random(3,4), random(-1,1), random(2,4), random(-55,-80),SXF_NOCHECKPOSITION);
		"####" G 2 A_FaceTarget;
		"####" H 0 A_StartSound("nazi/mp40", CHAN_WEAPON);
		"####" H 2 LIGHT(NAZIFIRE) A_SpawnProjectile("EnemySMGTracer",50,4,random(-8,8));
		"####" H 0 A_SpawnItemEx("9MMCasing", 8,0,40, random(3,4), random(-1,1), random(2,4), random(-55,-80),SXF_NOCHECKPOSITION);
		"####" G 2 A_FaceTarget;
		"####" H 0 A_StartSound("nazi/mp40", CHAN_WEAPON);
		"####" H 2 LIGHT(NAZIFIRE) A_SpawnProjectile("EnemySMGTracer",50,4,random(-8,8));
		"####" H 0 A_SpawnItemEx("9MMCasing", 8,0,40, random(3,4), random(-1,1), random(2,4), random(-55,-80),SXF_NOCHECKPOSITION);
		"####" G 2 A_FaceTarget;
		"####" H 0 A_StartSound("nazi/mp40", CHAN_WEAPON);
		"####" H 2 LIGHT(NAZIFIRE) A_SpawnProjectile("EnemySMGTracer",50,4,random(-8,8));
		"####" G 2 A_SpawnItemEx("9MMCasing", 8,0,40, random(3,4), random(-1,1), random(2,4), random(-55,-80),SXF_NOCHECKPOSITION);
		"####" G 0 {user_count++; if(user_count > 39) {user_count = 0; return ResolveState("Reload");} return ResolveState("");};
		Goto See;
	OccultFire:
		"####" OOPP 3 A_FaceTarget;
		"####" O 4 A_SpawnProjectile("OccultBlazeFlames",0,0,0,CMF_CHECKTARGETDEAD);
		"####" O 3;
		"####" P 4 A_SpawnProjectile("OccultBlazeFlames2",0,0,0,CMF_CHECKTARGETDEAD);
		"####" P 3;
		Goto See;
	ZyklonFire:
		"####" QQRR 3 A_FaceTarget;
		"####" Q 4 A_SpawnProjectile("OccultZyklonFlames",0,0,0,CMF_CHECKTARGETDEAD);
		"####" Q 3;
		"####" R 4 A_SpawnProjectile("OccultZyklonFlames2",0,0,0,CMF_CHECKTARGETDEAD);
		"####" R 3;
		Goto See;
	Reload:
		"####" F 0 {bNoPain = TRUE;};
		"####" F 30 A_StartSound("mp40/reload", CHAN_WEAPON);
		"####" F 0 A_SpawnItemEx("9MMCasing", 8,0,40, random(3,4), random(-1,1), random(2,4), random(-55,-80),SXF_NOCHECKPOSITION);
		"####" F 0 {bNoPain = FALSE;};
		"####" "#" 0 A_Jump(256, "See");
	Death:
		"####" J 8;
		"####" K 8 A_Scream;
		"####" L 8 A_NoBlocking;
		"####" MN 8;
		"####" N -1;
		Stop;
	Pain:
		"####" I 6 A_NaziPain;
		"####" I 0 A_Jump(256,"See");
		Stop;
	}
}
*/