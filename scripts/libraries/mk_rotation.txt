// Written by Marisa Kirisame - from https://forum.zdoom.org/viewtopic.php?f=122&t=61944&p=1071848
class ShapeUtil
{
	// create a square shape (not usable until calling MoveSquare)
	static clearscope Shape2D MakeSquare()
	{
		// the shape that will be drawn
		Shape2D square = new("Shape2D");

		// texture coordinates of each corner
		square.PushCoord((0, 0));
		square.PushCoord((1, 0));
		square.PushCoord((0, 1));
		square.PushCoord((1, 1));

		// two triangles make up the square
		// the points have to be in counter-clockwise order
		square.PushTriangle(0, 3, 1);
		square.PushTriangle(0, 2, 3);

		// Add the vertices which make up the square. It's better
		// to do this once, rather than doing it repeatedly.
		square.PushVertex((-0.5, -0.5));
		square.PushVertex((0.5, -0.5));
		square.PushVertex((-0.5, 0.5));
		square.PushVertex((0.5, 0.5));
		return square;
	}

	// set the positions of an existing square shape's vertices
	static clearscope void MoveSquare(Shape2D shape, Vector2 size, Vector2 pos, double angle)
	{
		// Use the new Shape2DTransform API to be more efficient. This should
		// reduce the amount of time 2D rendering takes.
		Shape2DTransform transform = new("Shape2DTransform");
		transform.Scale(size);
		transform.Rotate(angle);
		transform.Translate(pos);
		shape.SetTransform(transform);
	}
}