// Miscellaneous ACS tools

class ACSTools
{
	// Find the number of the last message in a series of messages in the string table.
	// Examples/expected results for various inputs:
	// prefix: DARRENMESSAGE
	// start: 1
	// return value: 101
	//
	// prefix: PRISONERMESSAGE
	// start: 1
	// return value: 21
	//
	// prefix: MARINEAFTERDOUGLESCONV
	// start: 1
	// return value: 55
	//
	static int LastMessageFor(String prefix, int start)
	{
		// Concatenating an empty string with a number is an easy way of converting it to a string
		String suffix = start < 10 ? "0" .. start : "" .. start;
		String lookup = prefix .. suffix;
		String entry = StringTable.Localize(lookup, false);
		int current = start;
		while (entry != lookup)
		{
			current++;
			suffix = current < 10 ? "0" .. current : "" .. current;
			lookup = prefix .. suffix;
			entry = StringTable.Localize(lookup, false);
		}
		return current - 1;
	}

	// For the first thing with a matching TID, get the integer value for the given argument
	static int GetArgument(int tid, int arg)
	{
		if(arg >= 0 && arg <= 4)
		{
			ActorIterator it = Level.CreateActorIterator(tid);
			Actor thething = it.Next();
			if (thething != null)
			{
				return thething.Args[arg];
			}
		}
		return -1;
	}

	// For the first thing with a matching TID, set the integer value for the given argument
	static play void SetArgument(int tid, int arg, int value)
	{
		if(arg >= 0 && arg <= 4)
		{
			int origArgs[5] = {0, 0, 0, 0, 0};
			ActorIterator it = Level.CreateActorIterator(tid);
			Actor thething = it.Next();
			if (thething != null)
			{
				for (int i = 0; i < 5; i++)
				{
					if (i == arg)
					{
						origArgs[i] = value;
					}
					else
					{
						origArgs[i] = thething.Args[i];
					}
				}
				thething.A_SetSpecial(thething.Special,
					origArgs[0],
					origArgs[1],
					origArgs[2],
					origArgs[3],
					origArgs[4]
				);
			}
		}
	}

	static clearscope int GetTextureWidth(string TextureName)
	{
		TextureID tex = TexMan.CheckForTexture(TextureName, TexMan.Type_Any);
		if (!tex)
		{
			return 0;
		}
		int width, height;
		[width, height] = TexMan.GetSize(tex);
		return width;
	}

	static clearscope int GetTextureHeight(string TextureName)
	{
		TextureID tex = TexMan.CheckForTexture(TextureName, TexMan.Type_Any);
		if (!tex)
		{
			return 0;
		}
		int width, height;
		[width, height] = TexMan.GetSize(tex);
		return height;
	}
}